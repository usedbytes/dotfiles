# Set prefix and allow nesting
unbind C-a
unbind C-b
set -g prefix C-a
bind a send-prefix

# Escape time
set-option -sg escape-time 0

# Set kill like screen
bind-key k confirm-before -p "kill-window #W? (y/n)" kill-window

# Prevent repeat on arrows
bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R

# Set key mode to vim-like
setw -g mode-keys vi
unbind p
bind p paste-buffer
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection

# Set splitting commands
unbind %
bind | split-window -h
bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v
bind _ split-window -v -c "#{pane_current_path}"

# Set-up mouse
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind -n C-WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind -T copy-mode-vi C-WheelUpPane send -X halfpage-up
bind -T copy-mode-vi C-WheelDownPane send -X halfpage-down

# Advertise 256-color
setw -g default-terminal screen-256color
#set-option -ga terminal-overrides ",*256col*:Tc"


# Default colors
set -g status-style 'fg=yellow,bright,bg=black'

# Inactive windows in status bar
set-window-option -g window-status-format '[#I:#W#F]'

# Current or active window in status bar
set-window-option -g window-status-current-format '#[bg=yellow,bright,fg=black,bold][#I:#W#F]'

# Alerted window in status bar. Windows which have an alert (bell, activity or content).
setw -g monitor-activity on
set-window-option -g window-status-activity-fg white
set-window-option -g window-status-activity-bg red

# Right side of status bar
set -g status-right-length 55
%if "#{==:#{host},archer}"
	# Archer is a Pi 4 - want to monitor temperature
	set -g status-right "#(vcgencmd measure_temp | cut -d '=' -f 2) | #(cat /proc/loadavg | cut -d ' ' -f 1,2,3,4) | %H:%M %d-%b-%y"
%elif "#{==:#{host},glados}"
	# Glados is a laptop - want to monitor power
	set -g status-right "#(~/dotfiles/battery_status.sh) | #(cat /proc/loadavg | cut -d ' ' -f 1,2,3,4) | %H:%M %d-%b-%y"
%elif "#{m:*DESKTOP*,#{host}}"
	# Work machine, so battery, ISO Week number and sprint
	set -g status-right "#(cat /sys/class/power_supply/battery/capacity)% | #(cat /proc/loadavg | cut -d ' ' -f 1,2,3,4) | %H:%M %d-%b-%y wk%V #(datetok)"
%else
	# Everywhere else
	set -g status-right "#(cat /proc/loadavg | cut -d ' ' -f 1,2,3,4) | %H:%M %d-%b-%y"
%endif

# Switch windows with Alt+Arrow
bind-key -n M-Left previous-window
bind-key -n M-Right next-window
